# Ravana Institute Course Management System - API Documentation

## Overview

This document provides comprehensive API documentation for the Ravana Institute Course Management System. It outlines available endpoints, authentication methods, request/response formats, and examples for integrating with the frontend website.

## Base URL

```
https://portal.riftuni.com/api
```

## Authentication

All API requests require authentication using API keys or standard Frappe authentication.

### API Key Authentication

1. Generate API key and API secret from User > API Access
2. Include the following headers in all requests:

```
api_key: 0d596da8ae9f32d
api_secret: 4ce96538f7c9df0
```

### Session Authentication

1. Authenticate with username and password to obtain a session cookie
2. Send the session cookie with subsequent requests

## API Endpoints

### 1. Course Categories

#### Get All Course Categories

```
GET /resource/Course Category
```

**Parameters:**
- `fields`: List of fields to return (optional)
- `filters`: JSON formatted filters (optional)
- `limit`: Maximum number of records to return (optional)

**Response:**
```json
{
  "data": [
    {
      "name": "digital-safety",
      "category_name": "Digital Safety & AI Awareness",
      "sort_order": 1,
      "description": "Learn the fundamentals of digital safety and AI awareness",
      "is_active": 1
    },
    ...
  ]
}
```

### 2. Course Formats

#### Get All Course Formats

```
GET /resource/Course Format
```

**Parameters:**
- `fields`: List of fields to return (optional)
- `filters`: JSON formatted filters (optional)

**Response:**
```json
{
  "data": [
    {
      "name": "online-intensive",
      "format_name": "Online Intensive", 
      "hours_per_day": 2,
      "days_per_week": 5,
      "total_weeks": 2,
      "is_physical": 0,
      "is_online": 1
    },
    ...
  ]
}
```

### 3. Time Zones

#### Get All Time Zones

```
GET /resource/Course Time Zone
```

**Response:**
```json
{
  "data": [
    {
      "name": "sl",
      "zone_name": "Sri Lanka",
      "gmt_offset": "+5:30"
    },
    ...
  ]
}
```

### 4. Programs (Courses)

#### Get All Programs

```
GET /resource/Program
```

**Parameters:**
- `fields`: List of fields to return (optional)
- `filters`: JSON formatted filters (optional)

**Response:**
```json
{
  "data": [
    {
      "name": "intro-digital-safety",
      "program_name": "Introduction to Digital Safety",
      "course_category": "digital-safety",
      "description": "A comprehensive introduction to digital safety concepts",
      "fee": 25000
    },
    ...
  ]
}
```

#### Get Program Details

```
GET /resource/Program/{program_name}
```

**Response:**
```json
{
  "data": {
    "name": "intro-digital-safety",
    "program_name": "Introduction to Digital Safety",
    "course_category": "digital-safety",
    "description": "A comprehensive introduction to digital safety concepts",
    "fee": 25000,
    "program_formats": [
      {
        "format": "online-intensive",
        "fee": 25000
      },
      {
        "format": "online-non-intensive",
        "fee": 30000
      }
    ]
  }
}
```

### 5. Course Batches

#### Get All Batches

```
GET /resource/Course Batch
```

**Parameters:**
- `fields`: List of fields to return (optional)
- `filters`: JSON formatted filters (optional)

**Response:**
```json
{
  "data": [
    {
      "name": "DSA-OI-MAY-23",
      "batch_name": "Digital Safety May 2023",
      "program": "intro-digital-safety",
      "course_format": "online-intensive",
      "time_zone": "sl",
      "language": "English",
      "start_date": "2023-05-01",
      "end_date": "2023-05-14",
      "capacity": 30,
      "status": "Upcoming"
    },
    ...
  ]
}
```

#### Get Available Batches for a Program

```
GET /resource/Course Batch?filters=[["program","=","intro-digital-safety"],["status","=","Upcoming"]]
```

**Response:**
```json
{
  "data": [
    {
      "name": "DSA-OI-MAY-23",
      "batch_name": "Digital Safety May 2023",
      "program": "intro-digital-safety",
      "course_format": "online-intensive",
      "time_zone": "sl",
      "language": "English",
      "start_date": "2023-05-01",
      "end_date": "2023-05-14",
      "capacity": 30,
      "status": "Upcoming"
    },
    ...
  ]
}
```

### 6. Lead Creation and Registration

#### Submit Lead and Course Interest

```
POST /resource/Lead
```

**Request:**
```json
{
  "lead_name": "John Doe",
  "company_name": "Individual",
  "first_name": "John",
  "last_name": "Doe",
  "email_id": "john.doe@example.com",
  "mobile_no": "+1234567890",
  "course_interest": "digital-safety",
  "preferred_language": "English",
  "preferred_time_zone": "sl",
  "age": "30-40",
  "special_requirements": "Need screen reader compatibility",
  "companion_registration": 0,
  "companion_name": "",
  "referral_source": "Google Search"
}
```

**Response:**
```json
{
  "data": {
    "name": "LEAD-00001",
    "lead_name": "John Doe",
    "status": "Lead"
  }
}
```

#### Convert Lead to Student

```
POST /method/ravana_institute.api.lead_to_student.convert_lead_to_student
```

**Request:**
```json
{
  "lead_name": "LEAD-00001"
}
```

**Response:**
```json
{
  "message": "STU00001"
}
```

### 7. Course Registration

#### Create Course Registration

```
POST /resource/Course Registration
```

**Request:**
```json
{
  "registration_date": "2023-04-15",
  "student": "STU00001",
  "lead": "LEAD-00001",
  "course_batch": "DSA-OI-MAY-23",
  "full_name": "John Doe",
  "email": "john.doe@example.com",
  "phone": "+1234567890",
  "age": "30-40",
  "preferred_language": "English",
  "special_requirements": "Need screen reader compatibility",
  "payment_type": "Full",
  "payment_status": "Pending",
  "amount_paid": 0,
  "status": "Registered"
}
```

**Response:**
```json
{
  "data": {
    "name": "REG-00001",
    "student": "STU00001",
    "course_batch": "DSA-OI-MAY-23",
    "status": "Registered"
  }
}
```

#### Get Registration Details

```
GET /resource/Course Registration/{registration_id}
```

**Response:**
```json
{
  "data": {
    "name": "REG-00001",
    "registration_date": "2023-04-15",
    "student": "STU00001",
    "lead": "LEAD-00001",
    "course_batch": "DSA-OI-MAY-23",
    "full_name": "John Doe",
    "email": "john.doe@example.com",
    "phone": "+1234567890",
    "age": "30-40",
    "preferred_language": "English",
    "special_requirements": "Need screen reader compatibility",
    "payment_type": "Full",
    "payment_status": "Pending",
    "amount_paid": 0,
    "status": "Registered"
  }
}
```

### 8. Student Portal APIs

#### Get Registered Courses

```
GET /resource/Course Registration?filters=[["student","=","STU00001"]]
```

**Response:**
```json
{
  "data": [
    {
      "name": "REG-00001",
      "course_batch": "DSA-OI-MAY-23",
      "status": "Registered",
      "registration_date": "2023-04-15"
    },
    ...
  ]
}
```

#### Get Course Sessions for a Batch

```
GET /resource/Course Session?filters=[["course_batch","=","DSA-OI-MAY-23"]]
```

**Response:**
```json
{
  "data": [
    {
      "name": "SES-00001",
      "course_batch": "DSA-OI-MAY-23",
      "session_date": "2023-05-01",
      "start_time": "10:00:00",
      "end_time": "12:00:00",
      "session_number": 1,
      "topic": "Introduction to Digital Safety",
      "instructor": "INS00001",
      "status": "Scheduled"
    },
    ...
  ]
}
```

## Error Handling

All API endpoints return appropriate HTTP status codes:

- 200: Success
- 400: Bad Request
- 401: Unauthorized
- 403: Forbidden
- 404: Resource Not Found
- 500: Server Error

Error responses follow this format:

```json
{
  "exc_type": "ValidationError",
  "exception": "Error description",
  "http_status_code": 400
}
```

## Rate Limiting

API requests are rate-limited to 100 requests per hour per API key. When this limit is exceeded, the API will return a 429 status code.

## Changelog

### v1.0 (Initial Release)
- Basic API endpoints for Course Categories, Formats, Programs, Batches
- Lead creation and conversion
- Course registration

## Implementation Examples

### Example 1: Loading Course Categories on the Website

```javascript
// Using fetch API
fetch('https://your-site.ravana-institute.com/api/resource/Course Category', {
  headers: {
    'api_key': 'your-api-key',
    'api_secret': 'your-api-secret'
  }
})
.then(response => response.json())
.then(data => {
  // Process course categories
  const categories = data.data;
  categories.forEach(category => {
    // Add category to dropdown or list
  });
})
.catch(error => console.error('Error fetching course categories:', error));
```

### Example 2: Lead Registration Form Submission

```javascript
// Example lead registration submission
const leadData = {
  lead_name: `${firstName} ${lastName}`,
  company_name: "Individual",
  first_name: firstName,
  last_name: lastName,
  email_id: email,
  mobile_no: phone,
  course_interest: selectedCourse,
  preferred_language: language,
  preferred_time_zone: timeZone,
  age: ageGroup,
  special_requirements: specialRequirements,
  referral_source: referralSource
};

fetch('https://your-site.ravana-institute.com/api/resource/Lead', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'api_key': 'your-api-key',
    'api_secret': 'your-api-secret'
  },
  body: JSON.stringify(leadData)
})
.then(response => response.json())
.then(data => {
  // Redirect to thank you page
  window.location.href = '/thank-you?lead=' + data.data.name;
})
.catch(error => console.error('Error submitting lead:', error));
```

## Support

For API support, please contact:
- Email: api-support@ravana-institute.com
- Phone: +94 11 XXXXXXX 